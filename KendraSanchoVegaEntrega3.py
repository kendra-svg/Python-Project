import math
import time
from termcolor import colored
import pygame
import os


pygame.init()
pygame.mixer.init()



os.system('cls')



musicaFondo = pygame.mixer.Sound('harrypottermusica.wav')
pygame.mixer.Sound.play(musicaFondo, -1) 

#Declaración de variables

equiposListaDesdeCero = []
numJuegosListaDesdeCero = []
numOponentesListaDesdeCero = []
puntajeTotal = []
listaMarcadores = []
confirmaEquipoLista = []
marcadoresEquipos = []
marcadorFinal = ''
listaEquipoConCincoPartidosoMas = []
listaPromedioOponentes = []
equipoSuperaPromedioOponentes = []
marcadorEquipo = 0 
listaVariableContadoraOriginal = []



def imprimirMenu():
    while True:
        print('')
        print('')
        print(colored('-------------------------------------------------------MENÚ--------------------------------------------------------------', 'light_magenta', attrs=["bold"]))
        print('')
        time.sleep(0.3)
        print(colored('¡Bienvenido al sistema de puntos Quidditch!', 'light_magenta'))
        print('')
        print('')
        time.sleep(0.4)
        preguntaInicial = int(input(colored('A continuacion elija una de las siguientes opciones: \n \n1. Inicializar el sistema. \n2. Registrar información de los equipos. \n3. Ver reporte de resultados de los juegos para cada equipo y ver el puntaje total de cada equipo del torneo. \n4. Ver reporte de resultados de cada uno de los equipos. \n5. Ver el puntaje total de cada uno de los equipos. \n6. Ver el promedio de oponentes diferentes de todos los equipos. \n7. Ver cuál equipo ha jugado más partidos en todo el torneo. \n8. Ver cuál equipo tiene el menor puntaje del torneo. \n9. Ver cuáles equipos han jugado 5 partidos o más. \n10. Ver cuál equipo tiene más oponentes que el promedio de oponentes de todo el torneo. \n11. Salir del programa. \n \nSu respuesta: ', 'light_magenta', attrs=["bold"])))
        print('')
        print('')
        print(colored('-------------------------------------------------------------------------------------------------------------------------', 'light_magenta', attrs=["bold"]))
        if preguntaInicial == 1:
            inicializarPrograma()
            listaVariableContadoraOriginal.append(1)
            break
        elif preguntaInicial in [2,3,4,5,6,7,8,9,10] and 1 not in listaVariableContadoraOriginal:
            print('')
            print('')
            print('')            
            print(colored('⚠️   ⚠️   ⚠️    ¡Antes de poder elegir esa opción, primero debe inicializar el sistema. Para hacer lo anterior por favor seleccione la opción número 1 en el siguiente menú!.    ⚠️   ⚠️   ⚠️', 'red', attrs=["bold"]))
            print('')
            print('')
            time.sleep(2)               
            continue    
        elif preguntaInicial == 2:
            registrarInformacionNuevoEquipo(marcadoresEquipos, equiposListaDesdeCero, numJuegosListaDesdeCero, numOponentesListaDesdeCero)
        elif preguntaInicial == 3:
            reporteResultados(marcadoresEquipos, numJuegosListaDesdeCero, numOponentesListaDesdeCero, confirmaEquipoLista)
        elif preguntaInicial == 4:
            reporteResultadosCadaEquipo()
        elif preguntaInicial == 5:
            reportePuntajeTotalCadaEquipo(puntajeTotal, confirmaEquipoLista)
        elif preguntaInicial == 6:
            promedioOponentesDiferentes(numJuegosListaDesdeCero)
        elif preguntaInicial == 7:
            equipoConMasPartidos(numJuegosListaDesdeCero)
        elif preguntaInicial == 8:
            equipoConMenosPuntaje(puntajeTotal)
        elif preguntaInicial == 9:
            equipoConCincoPartidosoMas(numJuegosListaDesdeCero)
        elif preguntaInicial == 10:
            equipoConMasOponentesQueElPromedio(numOponentesListaDesdeCero, listaPromedioOponentes)
        elif preguntaInicial == 11:
            print('')
            print('¡Hasta pronto!')
            print('')
            exit()
        else:
            print('')
            print('')
            print(colored('⚠️   ⚠️   ⚠️    ¡Esa opción es inválida!.    ⚠️   ⚠️   ⚠️    \n \nPor favor intente de nuevo y elija una opción del 1 al 10.',  'red', attrs=["bold"]))
            print('')
            time.sleep(1) 
            continue   

    
def cantidadEquiposTorneoDesdeCero(): 
    print('')
    time.sleep(0.3)
    cantidadEquipos = int(input('Por favor ingrese el total de equipos del torneo: '))
    print('')
    time.sleep(0.3)
    print('¡Muchas gracias!')
    print('')
    time.sleep(0.3)
    print('¡Ahora volveremos al menú inicial por si desea revisar otra opción.')
    print('')
    print('-------------------------------------------------------------------------------------------------------------------------')
    time.sleep(1)
    return cantidadEquipos




def inicializarPrograma(): 
    print('')
    print('')
    time.sleep(0.3)
    print('-------------------------------------------------------------------------------------------------------------------------')
    print('')
    print('')    
    print('Para iniciar con el registro, por favor responda la información solicitada.')
    print('')
    print('')




def registrarInformacionNuevoEquipo(pmarcadoresEquipos, paramEquiposListaDesdeCero, paramNumJuegosListaDesdeCero, paramNumOponentesListaDesdeCero):
    global marcadorEquipo    
    print('')
    print('')
    time.sleep(0.3)
    print('-------------------------------------------------------------------------------------------------------------------------')
    print('')
    print('')
    time.sleep(0.3)     
    print('Para agregar equipos e información adicional a los registros, por favor complete la siguiente información. ')
    print('')
    print('')    
    for h in range(cantidadEquipos):
        pmarcadoresEquipos.append([])

    for i in range(cantidadEquipos):
        print('')
        print('-------------------------------------------------------------------------------------------------------------------------')
        print('')
        time.sleep(0.3)
        equipos = input(f'Ingrese el nombre del equipo {i+1}: ').upper()
        print('')   
        paramEquiposListaDesdeCero.append(equipos)
        while True:
            try:
                print('')
                time.sleep(0.3) 
                numJuegos = int(input(f'Digite el número de juegos ejecutados por el equipo {equipos}: '))
                print('') 
                break
            except ValueError:
                print('') 
                print(colored('⚠️   ⚠️   ⚠️    Debe ingresar un número entero, por favor vuelva a intentar.     ⚠️   ⚠️   ⚠️', 'red', attrs=["bold"]))
                print('') 
        paramNumJuegosListaDesdeCero.append(numJuegos)
        
        while True:
            try:
                time.sleep(0.3)
                numOponentes = int(input(f'Digite el número de oponentes diferentes contra los que ha jugado el equipo {equipos} en el torneo: '))
                print('') 
                break
            except ValueError:
                print('') 
                print(colored('⚠️   ⚠️   ⚠️    Debe ingresar un número entero, por favor vuelva a intentar.     ⚠️   ⚠️   ⚠️', 'red', attrs=["bold"]))
                print('') 
        paramNumOponentesListaDesdeCero.append(numOponentes)

        print('')
        print('')
        time.sleep(0.3)
        confirmaEquipo = input(f'Por favor confirme el nombre del equipo mencionado para empezar el registro: ').upper()
        print('')
        print('')
        while confirmaEquipo != equipos:
            print('')
            time.sleep(0.3)
            print(colored('⚠️   ⚠️   ⚠️    El nombre ingresado no coincide con el equipo, por favor intente de nuevo.     ⚠️   ⚠️   ⚠️', 'red', attrs=["bold"]))
            print('')
            confirmaEquipo = input(f'Por favor confirme el nombre del equipo mencionado para empezar el registro: ')
            print('')
        if confirmaEquipo == equipos:
            confirmaEquipoLista.append(confirmaEquipo)
            pass
        print('')
        print('')
        time.sleep(0.3)
        print('¡Entendido, gracias por la información!')
        print('-------------------------------------------------------------------------------------------------------------------------')
        
        for k in range(numJuegos):
            print('-------------------------------------------------------------------------------------------------------------------------')
            print('')
            print('')
            time.sleep(0.3)
            print('A continuación, ingrese los datos de los juegos.')
            print('')
            time.sleep(0.3)
            partidoContra = str(input(f'Juego {k+1} {confirmaEquipo} vs: ')).upper()
            print('')

            while True:
                try:
                    print('')
                    time.sleep(0.3)
                    marcadorEquipoLocal = int(input(f'Marcador de {confirmaEquipo}: '))
                    print('')
                    break
                except ValueError:
                    print('')
                    print(colored('⚠️   ⚠️   ⚠️    Debe ingresar un número entero, por favor vuelva a intentar.     ⚠️   ⚠️   ⚠️', 'red', attrs=["bold"]))
                    print('')
                    
            marcadorEquipo += int(marcadorEquipoLocal)
            pmarcadoresEquipos[i].append(int(marcadorEquipoLocal))         
            
            while True:
                time.sleep(0.3)
                snitchEquipo = input(f'¿Atrapó la snitch?: ').lower()
                if snitchEquipo in ['si', 'no']:
                    break
                else:
                    print('')
                    print(colored('⚠️   ⚠️   ⚠️    Debe ingresar "si" o "no", por favor vuelva a intentar.     ⚠️   ⚠️   ⚠️', 'red', attrs=["bold"]))
                    print('')
            
            while True:
                try:
                    print('')
                    time.sleep(0.3)
                    marcadorOponente = int(input(f'Marcador de {partidoContra}: '))
                    print('')
                    break
                except ValueError:
                    print('')
                    print(colored('⚠️   ⚠️   ⚠️    Debe ingresar un número entero, por favor vuelva a intentar.     ⚠️   ⚠️   ⚠️', 'red', attrs=["bold"]))
                    print('')
                    
            while True:
                time.sleep(0.3)
                snitchOponente = input(f'¿Atrapó la snitch?: ').lower()
                if snitchOponente in ['si', 'no']:
                    break
                else:
                    print('')
                    print(colored('⚠️   ⚠️   ⚠️    Debe ingresar "si" o "no", por favor vuelva a intentar.     ⚠️   ⚠️   ⚠️', 'red', attrs=["bold"]))
                    print('')
            if snitchEquipo == 'si':
                marcadorFinal = equipos + ' vs ' + partidoContra+': ' + str(marcadorEquipoLocal) +'* - '+ str(marcadorOponente)
            elif snitchOponente == 'si':
                marcadorFinal = equipos + ' vs ' + partidoContra+': ' + str(marcadorEquipoLocal) +' - '+ str(marcadorOponente)+'*'
            listaMarcadores.append(marcadorFinal)
    print('-------------------------------------------------------------------------------------------------------------------------')
    time.sleep(2)        
          
def reporteResultados(marcadoresEquipos, paramnumJuegos, paramnumOponentes, paramconfirmaEquipo): 
    global listaMarcadores
    global puntajeTotal
    print('')
    print('---------------------------------------------Reporte de resultados generales---------------------------------------------')  
    print('')
    print(*listaMarcadores, sep= '\n')
    print('') 
    sumaMarcadoresEquipo = []
    variableContador = 0
    for listaMarcadoresEquipo in marcadoresEquipos:
        numJuegos = paramnumJuegos[variableContador]
        numOponentes = paramnumOponentes[variableContador]
        confirmaEquipo = paramconfirmaEquipo[variableContador]
        sumaMarcador = sum(listaMarcadoresEquipo)
        sumaMarcadoresEquipo.append([sumaMarcador])
        combinacion1 = round(float(sumaMarcador + 1 + 1/3), 2)
        combinacion2 = round(float(sumaMarcador + (math.sqrt(numJuegos)/2.25) + 1/3), 2)
        combinacion3 = round(float(sumaMarcador + 1 + 2/3), 2)
        combinacion4 = round(float(sumaMarcador + (math.sqrt(numJuegos)/2.25) + 2/3), 2)
        combinacion5 = round(float(sumaMarcador + 1 + 1), 2)
        combinacion6 = round(float(sumaMarcador + (math.sqrt(numJuegos)/2.25) + 1), 2)
        
        print(f"El equipo {confirmaEquipo} obtuvo un total de {sumaMarcador} puntos.")
        if numJuegos >= 5 and numOponentes == 1:
            print(f'El puntaje total del equipo {confirmaEquipo} es {combinacion1}')
            puntajeTotal.append(combinacion1)
        elif numJuegos < 5 and numOponentes == 1:
            print(f'El puntaje total del equipo {confirmaEquipo} es {combinacion2}')
            puntajeTotal.append(combinacion2)
        elif numJuegos >= 5 and numOponentes == 2:
            print(f'El puntaje total del equipo {confirmaEquipo} es {combinacion3}')
            puntajeTotal.append(combinacion3)
        elif numJuegos < 5 and numOponentes == 2:
            print(f'El puntaje total del equipo {confirmaEquipo} es {combinacion4}')
            puntajeTotal.append(combinacion4)
        elif numJuegos >= 5 and numOponentes >= 3:
            print(f'El puntaje total del equipo {confirmaEquipo} es {combinacion5}')
            puntajeTotal.append(combinacion5)
        elif numJuegos < 5 and numOponentes >= 3:
            print(f'El puntaje total del equipo {confirmaEquipo} es {combinacion6}')
            puntajeTotal.append(combinacion6)
        variableContador += 1            
        print('')
        print('')
    print('-------------------------------------------------------------------------------------------------------------------------')
    time.sleep(2)


def reporteResultadosCadaEquipo():
    print('')
    print('')
    print('------------------------------------Reporte de resultados de cada uno de los equipos------------------------------------')  
    print(' ')
    print(' ')
    global listaMarcadores
    print(*listaMarcadores, sep= '\n')
    print(' ')
    print(' ')
    print('-------------------------------------------------------------------------------------------------------------------------')
    time.sleep(2)

def reportePuntajeTotalCadaEquipo(ppuntajeTotal, pconfirmaEquipoLista):
    variableContadoraTres = 0
    print(' ')
    print(' ')
    print('----------------------------------Reporte de puntaje total de cada uno de los equipos------------------------------------') 
    for m in range(cantidadEquipos):
        print(' ')
        print(' ')
        puntajeTotalPorEquipo = ppuntajeTotal[variableContadoraTres]
        confirmaEquipoLista = pconfirmaEquipoLista[variableContadoraTres]
        print(f"El puntaje total del equipo {confirmaEquipoLista} es {puntajeTotalPorEquipo}")
        variableContadoraTres += 1
        print(' ')
        print(' ')
    print('-------------------------------------------------------------------------------------------------------------------------')
    time.sleep(2)

def promedioOponentesDiferentes(paramNumOponentesListaDesdeCero):
    print(' ')
    print(' ')
    print('-------------------------------Promedio de oponentes diferentes de cada uno de los equipos-------------------------------') 
    promedio = sum(paramNumOponentesListaDesdeCero)/len(paramNumOponentesListaDesdeCero)
    promedioRedondeado = round(promedio, 2)
    print(' ')
    print(' ')
    print(f'El promedio de oponentes diferentes de todos los equipos es {promedioRedondeado}')
    listaPromedioOponentes.append(promedioRedondeado)
    print(' ')
    print(' ')
    print('-------------------------------------------------------------------------------------------------------------------------')
    time.sleep(2)
    


def equipoConMasPartidos(paramNumJuegosListaDesdeCero):
    print(' ')
    print(' ')
    print('-------------------------------------------------Equipos con más juegos--------------------------------------------------') 
    print(' ')
    print(' ')
    maxJuegos = max(paramNumJuegosListaDesdeCero)
    indiceMax = numJuegosListaDesdeCero.index(maxJuegos)
    equipoMaxJuegos = confirmaEquipoLista[indiceMax]
    print(f"El equipo con más partidos en todo el torneo es: {equipoMaxJuegos}")
    print(' ')
    print(' ')
    print('-------------------------------------------------------------------------------------------------------------------------')
    time.sleep(2)
    

def equipoConMenosPuntaje(paramPuntajeTotal):
    print(' ')
    print(' ')    
    print('----------------------------------------------Equipos con menos puntaje total--------------------------------------------') 
    print(' ')
    print(' ')
    minPuntajeTotal = min(paramPuntajeTotal)
    indiceMin = puntajeTotal.index(minPuntajeTotal)
    equipoMinPuntajeTotal = confirmaEquipoLista[indiceMin]    
    print(f"El equipo con menos puntaje total en todo el torneo es: {equipoMinPuntajeTotal}")
    print(' ')
    print(' ')
    print('-------------------------------------------------------------------------------------------------------------------------')
    time.sleep(2)
    
def equipoConCincoPartidosoMas(paramNumJuegosListaDesdeCero):
    print(' ')
    print(' ')    
    print('---------------------------------------------Equipos con 5 partidos o más------------------------------------------------') 
    for n in range(len(paramNumJuegosListaDesdeCero)):
        if paramNumJuegosListaDesdeCero[n] >= 5:
            listaEquipoConCincoPartidosoMas.append(confirmaEquipoLista[n])
    if len(listaEquipoConCincoPartidosoMas) > 0:
        print(' ')
        print(' ')
        print(f"Los equipos con 5 partidos o más son: {', '.join(listaEquipoConCincoPartidosoMas)}")
    else:
        print(' ')
        print(' ')
        print("No hay equipos con 5 partidos o más.")
    print(' ')
    print(' ')
    print('-------------------------------------------------------------------------------------------------------------------------')
    time.sleep(2)    

def equipoConMasOponentesQueElPromedio(paramNumOponentesListaDesdeCero, paramListaPromedioOponentes):
    print(' ')
    print(' ')
    print('----------------------------------------Equipos con más oponentes que el promedio----------------------------------------')     
    numOponentesMax = max(paramNumOponentesListaDesdeCero)
    indiceMaxOponentes = paramNumOponentesListaDesdeCero.index(numOponentesMax)
    if numOponentesMax > paramListaPromedioOponentes[0]:
        print(' ')
        print(' ')        
        print(f'El equipo con mas oponentes que el promedio de oponentes por equipo es: {confirmaEquipoLista[indiceMaxOponentes]} ')
    else:
        print(' ')
        print(' ')
        print("No hay ningún equipo con más oponentes que el promedio.")
    print(' ')
    print(' ')
    print('-------------------------------------------------------------------------------------------------------------------------')
    time.sleep(2)      
    imprimirMenu()      




if __name__ == "__main__":
    imprimirMenu()
    cantidadEquipos = cantidadEquiposTorneoDesdeCero()
    imprimirMenu()






















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































